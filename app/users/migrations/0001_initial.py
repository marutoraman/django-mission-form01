# Generated by Django 3.1.6 on 2021-05-12 15:32

import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import users.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='YahooAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yahoo_account_id', models.CharField(blank=True, max_length=50, verbose_name='ヤフオクアカウント')),
                ('yahoo_pass', models.CharField(blank=True, max_length=20, verbose_name='ヤフオクパスワード')),
            ],
            options={
                'verbose_name': 'ヤフオクアカウント',
                'verbose_name_plural': 'ヤフオクアカウント',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account_id', models.CharField(error_messages={'unique': 'A user with that account_id already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='アカウントID')),
                ('full_name', models.CharField(blank=True, max_length=150, verbose_name='氏名')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('account_count', models.IntegerField(blank=True, null=True, verbose_name='最大アカウント数')),
                ('plan', models.CharField(choices=[('ALL_PLAN', '全て対応'), ('URL_PLAN', 'URL指定のみ'), ('WORD_PLAN', '検索ワード指定のみ')], default=('ALL_PLAN', '全て対応'), max_length=20, verbose_name='プラン')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('begin_crawle_at', models.DateTimeField(null=True, verbose_name='クロール開始日時')),
                ('crawled_at', models.DateTimeField(null=True, verbose_name='最終クロール日時')),
                ('is_crawl', models.BooleanField(null=True, verbose_name='is_crawl')),
                ('syuppin_mode_at', models.DateTimeField(null=True, verbose_name='最終出品モード起動日時')),
                ('torihiki_mode_at', models.DateTimeField(null=True, verbose_name='最終取引モード起動日時')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('yahoo_account_id', models.ManyToManyField(blank=True, help_text='ヤフオクアカウントを登録', related_name='user_set', related_query_name='user', to='users.YahooAccount', verbose_name='ヤフオクアカウント')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
    ]
